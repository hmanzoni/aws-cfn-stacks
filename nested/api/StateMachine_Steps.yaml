AWSTemplateFormatVersion: "2010-09-09"
Description: Creation of the Step Functions for handle the triggers sended from the FrontEnd App.
Parameters:
  ArnLambdaEmail:
    Description: You must use the ARN from the Lambda fn created for send the emails.
    Type: String
  ArnStateMachineRole:
    Description: This ARN is needed for assosiate a role to the State Machine for handle the permissions.
    Type: String
  SMachineName:
    Description: Name for State Machine.
    Type: String
    Default: api
Resources:
  StateMachineSteps:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Ref SMachineName
      RoleArn: !Ref ArnStateMachineRole
      DefinitionString: !Sub |-
        {
          "Comment": "${SMachineName} - using native SNS SMS and Lambda for email.",
          "StartAt": "Timer",
          "States": {
            "Timer": {
              "Type": "Wait",
              "SecondsPath": "$.waitSeconds",
              "Next": "ChoiceState"
            },
            "ChoiceState": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.preference",
                  "StringEquals": "email",
                  "Next": "EmailOnly"
                },
                {
                  "Variable": "$.preference",
                  "StringEquals": "sms",
                  "Next": "SMSOnly"
                },
                {
                  "Variable": "$.preference",
                  "StringEquals": "both",
                  "Next": "EmailandSMS"
                }
              ],
              "Default": "NoChoice"
            },
            "EmailOnly": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${ArnLambdaEmail}",
                "Payload": {
                  "Input.$": "$"
                }
              },
              "Next": "NextState"
            },
            "SMSOnly": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sns:publish",
              "Parameters": {
                "Message": {
                  "Input.$": "$.message"
                },
                "PhoneNumber.$": "$.phone"
              },
              "Next": "NextState"
            },
            "EmailandSMS": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "ParallelEmail",
                  "States": {
                    "ParallelEmail": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "Parameters": {
                        "FunctionName": "${ArnLambdaEmail}",
                        "Payload": {
                          "Input.$": "$"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "ParallelSMS",
                  "States": {
                    "ParallelSMS": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::sns:publish",
                      "Parameters": {
                        "Message": {
                          "Input.$": "$.message"
                        },
                        "PhoneNumber.$": "$.phone"
                      },
                      "End": true
                    }
                  }
                }
              ],
              "Next": "NextState"
            },
            "NoChoice": {
              "Type": "Fail",
              "Error": "DefaultStateError",
              "Cause": "No Choice Made!"
            },
            "NextState": {
              "Type": "Pass",
              "End": true
            }
          }
        }
Outputs:
  ArnStateMachineSteps:
    Description: The value of ARN will be use for the AWS Lambda API
    Value: !GetAtt StateMachineSteps.Arn
