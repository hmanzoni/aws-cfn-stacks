AWSTemplateFormatVersion: 2010-09-09
Description: Creation CodePipeline as orchestrator of a CodeBuild and CodeCommit

Parameters:
  AppName:
    Type: String
  CodePipelineServiceRoleName:
    Type: String
  CodeCommitRepoName:
    Type: String
  CodeCommitRepoBranchName:
    Type: String
  CodeBuildNameProject:
    Type: String
  ECSClusterName:
    Type: String
  ECSServiceName:
    Type: String
  ArtifactStoreS3LocationName:
    Type: String

Resources:
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AppName
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3LocationName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref CodeCommitRepoName
                BranchName: !Ref CodeCommitRepoBranchName
              Namespace: SourceVariables
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildNameProject
              Namespace: BuildVariables
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              InputArtifacts:
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref ECSClusterName
                ServiceName: !Ref ECSServiceName
                FileName: imagedefinitions.json
              RunOrder: 1

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${CodePipelineServiceRoleName}-${AWS::Region}-${AppName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CodePipelineServicePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: CodePipelineServicePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "iam:PassRole"
            Resource: "*"
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                "iam:PassedToService":
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Action:
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetRepository"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
            Resource: "*"
            Effect: Allow
          - Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetApplication"
              - "codedeploy:GetApplicationRevision"
              - "codedeploy:GetDeployment"
              - "codedeploy:GetDeploymentConfig"
              - "codedeploy:RegisterApplicationRevision"
            Resource: "*"
            Effect: Allow
          - Action:
              - "codestar-connections:UseConnection"
            Resource: "*"
            Effect: Allow
          - Action:
              - "elasticbeanstalk:*"
              - "ec2:*"
              - "elasticloadbalancing:*"
              - "autoscaling:*"
              - "cloudwatch:*"
              - "s3:*"
              - "sns:*"
              - "cloudformation:*"
              - "rds:*"
              - "sqs:*"
              - "ecs:*"
            Resource: "*"
            Effect: Allow
          - Action:
              - "lambda:InvokeFunction"
              - "lambda:ListFunctions"
            Resource: "*"
            Effect: Allow
          - Action:
              - "opsworks:CreateDeployment"
              - "opsworks:DescribeApps"
              - "opsworks:DescribeCommands"
              - "opsworks:DescribeDeployments"
              - "opsworks:DescribeInstances"
              - "opsworks:DescribeStacks"
              - "opsworks:UpdateApp"
              - "opsworks:UpdateStack"
            Resource: "*"
            Effect: Allow
          - Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:ValidateTemplate"
            Resource: "*"
            Effect: Allow
          - Action:
              - "codebuild:BatchGetBuilds"
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuildBatches"
              - "codebuild:StartBuildBatch"
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
              - "devicefarm:ListProjects"
              - "devicefarm:ListDevicePools"
              - "devicefarm:GetRun"
              - "devicefarm:GetUpload"
              - "devicefarm:CreateUpload"
              - "devicefarm:ScheduleRun"
            Resource: "*"
          - Effect: Allow
            Action:
              - "servicecatalog:ListProvisioningArtifacts"
              - "servicecatalog:CreateProvisioningArtifact"
              - "servicecatalog:DescribeProvisioningArtifact"
              - "servicecatalog:DeleteProvisioningArtifact"
              - "servicecatalog:UpdateProduct"
            Resource: "*"
          - Effect: Allow
            Action:
              - "cloudformation:ValidateTemplate"
            Resource: "*"
          - Effect: Allow
            Action:
              - "ecr:DescribeImages"
            Resource: "*"
          - Effect: Allow
            Action:
              - "states:DescribeExecution"
              - "states:DescribeStateMachine"
              - "states:StartExecution"
            Resource: "*"
          - Effect: Allow
            Action:
              - "appconfig:StartDeployment"
              - "appconfig:StopDeployment"
              - "appconfig:GetDeployment"
            Resource: "*"
      Roles:
        - !Ref CodePipelineServiceRole

  ArtifactStoreS3LocationPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStoreS3LocationName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "s3:PutObject"
            Effect: Deny
            Resource: !Sub "arn:aws:s3:::${ArtifactStoreS3LocationName}/*"
            Principal: "*"
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption":
                  - "aws:kms"
          - Action:
              - "s3:*"
            Effect: Deny
            Resource: !Sub "arn:aws:s3:::${ArtifactStoreS3LocationName}/*"
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport":
                  - false

Outputs:
  AppPipelineName:
    Value: !Ref AppPipeline
