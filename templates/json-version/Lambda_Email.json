{
  "Description": "Lambda function for send Email using SES",
  "Parameters": {
    "Email": {
      "Description": "This email will be register on SES for recive the emails from the app.",
      "Type": "String",
      "AllowedPattern": "/[^\\s@]+@[^\\s@]+\\.[^\\s@]+/",
      "ConstraintDescription": "You should enter a valid email"
    },
    "ArnLambdaRole": {
      "Description": "This ARN is needed for assosiate a role to the Lambda fn for handle the permissions.",
      "Type": "String"
    }
  },
  "Resources": {
    "LambdaSESEmailHandler": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.lambda_handler",
        "Code": {
          "ZipFile": {
            "Fn::Sub": "import boto3, os, json\n\nFROM_EMAIL_ADDRESS = '${Email}'\nses = boto3.client('ses')\n\ndef lambda_handler(event, context):\n    \n    # Print event data to logs .. \n    print(\"Received event: \" + json.dumps(event))\n    \n    # Publish message directly to email, provided by EmailOnly or EmailPar TASK\n    ses.send_email( Source=FROM_EMAIL_ADDRESS,\n        Destination={ 'ToAddresses': [ event['Input']['email'] ] }, \n        Message={ 'Subject': {'Data': 'Whiskers Commands You to attend!'},\n            'Body': {'Text': {'Data': event['Input']['message']}}\n        }\n    )\n    return 'Success!'\n"
          }
        },
        "Runtime": "python3.9",
        "Role": {
          "Ref": "ArnLambdaRole"
        }
      }
    }
  },
  "Outputs": {
    "ArnLambdaFnSES": {
      "Description": "The value of ARN will be use for the AWS State Machines",
      "Value": {
        "Fn::GetAtt": ["LambdaSESEmailHandler", "Arn"]
      }
    }
  }
}
